; ModuleID = 'hello.cpp'
source_filename = "hello.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [10 x i8] c"hello %d\0A\00", align 1
@0 = private unnamed_addr constant [132 x i8] c"[color=green, label=\22{NodeID: 7\5CnFunExitBlockNode ID: 7 Exit(\5C{ ln: 2  cl: 14  fl: hello.cpp \5C})\5Cn \5C{fun: main\5C}}\22, shape=record]; \00"
@1 = private unnamed_addr constant [184 x i8] c"[color=blue, label=\22{NodeID: 6\5CnRetBlockNode ID: 6   %4 = tail call i32 (i8*, ...) @printf(i8* %3, i32 %0), !dbg !20 \5C{ ln: 4  cl: 3  fl: hello.cpp \5C} \5C{fun: main\5C}}\22, shape=record]; \00"
@2 = private unnamed_addr constant [149 x i8] c"[color=black, label=\22{NodeID: 5\5CnIntraBlockNode ID: 5      ret i32 0, !dbg !21 \5C{ ln: 5  cl: 3  fl: hello.cpp \5C}    \5C{fun: main\5C}}\22, shape=record]; \00"
@3 = private unnamed_addr constant [103 x i8] c"[color=yellow, label=\22{NodeID: 4\5CnFunEntryBlockNode ID: 4 Entry()\5Cn \5C{fun: printf\5C}}\22, shape=record]; \00"
@4 = private unnamed_addr constant [206 x i8] c"[color=red, label=\22{NodeID: 3\5CnCallBlockNode ID: 3   %4 = tail call i32 (i8*, ...) @printf(i8* %3, i32 %0), !dbg !20 \5C{ ln: 4  cl: 3  fl: hello.cpp \5C} \5C{fun: main\5C}|{|<s1>0x55555605bfd0}}\22, shape=record]; \00"
@5 = private unnamed_addr constant [186 x i8] c"[color=black, label=\22{NodeID: 2\5CnIntraBlockNode ID: 2   NormalGepPE: [13\5C<--4]  \5Cn   %3 = getelementptr [10 x i8], [10 x i8]* @.str, i64 0, i64 0 \5C{  \5C} \5C{fun: main\5C}}\22, shape=record]; \00"
@6 = private unnamed_addr constant [133 x i8] c"[color=yellow, label=\22{NodeID: 1\5CnFunEntryBlockNode ID: 1 Entry(\5C{ in line: 2 file: hello.cpp \5C})\5Cn \5C{fun: main\5C}}\22, shape=record]; \00"
@7 = private unnamed_addr constant [3 x i8] c"-1\00"
@iInt2kBestArray = constant [8 x i8*] [i8* getelementptr inbounds ([132 x i8], [132 x i8]* @0, i32 0, i32 0), i8* getelementptr inbounds ([184 x i8], [184 x i8]* @1, i32 0, i32 0), i8* getelementptr inbounds ([149 x i8], [149 x i8]* @2, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @3, i32 0, i32 0), i8* getelementptr inbounds ([206 x i8], [206 x i8]* @4, i32 0, i32 0), i8* getelementptr inbounds ([186 x i8], [186 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([133 x i8], [133 x i8]* @6, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @7, i32 0, i32 0)]
@iInt2kBlockIndexFunction = constant [9 x i32] [i32 0, i32 5, i32 8, i32 12, i32 15, i32 17, i32 18, i32 18, i32 19]
@iInt2kFlattenedFunctionNames = constant [19 x i8*] [i8* getelementptr inbounds ([184 x i8], [184 x i8]* @1, i32 0, i32 0), i8* getelementptr inbounds ([149 x i8], [149 x i8]* @2, i32 0, i32 0), i8* getelementptr inbounds ([206 x i8], [206 x i8]* @4, i32 0, i32 0), i8* getelementptr inbounds ([186 x i8], [186 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([133 x i8], [133 x i8]* @6, i32 0, i32 0), i8* getelementptr inbounds ([206 x i8], [206 x i8]* @4, i32 0, i32 0), i8* getelementptr inbounds ([186 x i8], [186 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([133 x i8], [133 x i8]* @6, i32 0, i32 0), i8* getelementptr inbounds ([184 x i8], [184 x i8]* @1, i32 0, i32 0), i8* getelementptr inbounds ([206 x i8], [206 x i8]* @4, i32 0, i32 0), i8* getelementptr inbounds ([186 x i8], [186 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([133 x i8], [133 x i8]* @6, i32 0, i32 0), i8* getelementptr inbounds ([206 x i8], [206 x i8]* @4, i32 0, i32 0), i8* getelementptr inbounds ([186 x i8], [186 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([133 x i8], [133 x i8]* @6, i32 0, i32 0), i8* getelementptr inbounds ([186 x i8], [186 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([133 x i8], [133 x i8]* @6, i32 0, i32 0), i8* getelementptr inbounds ([133 x i8], [133 x i8]* @6, i32 0, i32 0), i8* getelementptr inbounds ([133 x i8], [133 x i8]* @6, i32 0, i32 0)]
@8 = private unnamed_addr constant [5 x i8] c"main\00"
@9 = private unnamed_addr constant [7 x i8] c"printf\00"
@10 = private unnamed_addr constant [15 x i8] c"llvm.dbg.value\00"
@11 = private unnamed_addr constant [5 x i8] c"exit\00"
@12 = private unnamed_addr constant [13 x i8] c"_int2k_check\00"
@13 = private unnamed_addr constant [11 x i8] c"_aibarFunc\00"
@14 = private unnamed_addr constant [21 x i8] c"_int2k_translateName\00"
@15 = private unnamed_addr constant [17 x i8] c"_int2k_init_flag\00"
@16 = private unnamed_addr constant [19 x i8] c"_int2k_delete_flag\00"
@17 = private unnamed_addr constant [16 x i8] c"_int2k_add_edge\00"
@18 = private unnamed_addr constant [18 x i8] c"_int2k_handle_arg\00"
@19 = private unnamed_addr constant [28 x i8] c"_int2k_handle_function_name\00"
@20 = private unnamed_addr constant [24 x i8] c"_int2k_handle_meta_data\00"
@21 = private unnamed_addr constant [26 x i8] c"_iInt2k_lineNumToLineInfo\00"
@22 = private unnamed_addr constant [18 x i8] c"_iInt2k_init_flag\00"
@23 = private unnamed_addr constant [14 x i8] c"_iInt2k_check\00"
@24 = private unnamed_addr constant [17 x i8] c"_iInt2k_add_edge\00"
@25 = private unnamed_addr constant [25 x i8] c"_iInt2k_handle_meta_data\00"
@26 = private unnamed_addr constant [29 x i8] c"_iInt2k_handle_function_name\00"
@27 = private unnamed_addr constant [22 x i8] c"_iInt2k_translateName\00"
@28 = private unnamed_addr constant [16 x i8] c"iMarkFunctionID\00"
@29 = private unnamed_addr constant [15 x i8] c"markFunctionID\00"
@int2kBestArray = constant [22 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @8, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @9, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @10, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @12, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @13, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @14, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @15, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @16, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @17, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @18, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @19, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @20, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @21, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @22, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @23, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @24, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @25, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @26, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @27, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @28, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @29, i32 0, i32 0)]
@int2kBlockIndexFunction = constant [4 x i32] [i32 0, i32 2, i32 3, i32 5]
@int2kFlattenedFunctionNames = constant [5 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @9, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @10, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @10, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @8, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @9, i32 0, i32 0)]

; Function Attrs: norecurse nounwind uwtable
define i32 @main(i32, i8** nocapture readnone) local_unnamed_addr #0 !dbg !8 {
  call void @_int2k_init_flag(i32 22), !dbg !18
  call void @_iInt2k_init_flag(i32 8), !dbg !18
  call void @markFunctionID(), !dbg !18
  call void @iMarkFunctionID(), !dbg !18
  %3 = call i32 @_int2k_handle_arg(i32 %0, i8** %1), !dbg !18
  call void @_iInt2k_check(i8* getelementptr inbounds ([132 x i8], [132 x i8]* @0, i32 0, i32 0)), !dbg !18
  call void @_int2k_check(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @8, i32 0, i32 0)), !dbg !18
  call void @llvm.dbg.value(metadata i32 %0, metadata !16, metadata !DIExpression()), !dbg !18
  call void @llvm.dbg.value(metadata i8** %1, metadata !17, metadata !DIExpression()), !dbg !19
  call void @_iInt2k_check(i8* getelementptr inbounds ([184 x i8], [184 x i8]* @1, i32 0, i32 0)), !dbg !20
  %4 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 %0), !dbg !20
  call void @_iInt2k_check(i8* getelementptr inbounds ([149 x i8], [149 x i8]* @2, i32 0, i32 0)), !dbg !21
  call void @_int2k_delete_flag(), !dbg !21
  ret i32 0, !dbg !21
}

; Function Attrs: nounwind
declare i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

declare void @exit(i32)

declare void @_int2k_check(i8*)

declare void @_aibarFunc(i8*)

declare void @_int2k_translateName(i8*, i32)

declare void @_int2k_init_flag(i32)

declare void @_int2k_delete_flag()

declare void @_int2k_add_edge(i8*, i8*)

declare i32 @_int2k_handle_arg(i32, i8**)

declare void @_int2k_handle_function_name(i32, i8**)

declare void @_int2k_handle_meta_data(i32, i32*, i8**, i8**)

declare void @_iInt2k_lineNumToLineInfo(i32, i8*)

declare void @_iInt2k_init_flag(i32)

declare void @_iInt2k_check(i8*)

declare void @_iInt2k_add_edge(i8*, i8*)

declare void @_iInt2k_handle_meta_data(i32, i32*, i8**, i8**)

declare void @_iInt2k_handle_function_name(i32, i8**)

declare void @_iInt2k_translateName(i8*, i32)

define void @iMarkFunctionID() {
  %1 = alloca i64
  store i64 0, i64* %1
  %2 = load i64, i64* %1
  %3 = alloca i8**
  store i8** getelementptr inbounds ([8 x i8*], [8 x i8*]* @iInt2kBestArray, i32 0, i32 0), i8*** %3
  %4 = load i8**, i8*** %3
  call void @_iInt2k_handle_function_name(i32 8, i8** %4)
  %5 = alloca i32*
  store i32* getelementptr inbounds ([9 x i32], [9 x i32]* @iInt2kBlockIndexFunction, i32 0, i32 0), i32** %5
  %6 = load i32*, i32** %5
  %7 = alloca i8**
  store i8** getelementptr inbounds ([19 x i8*], [19 x i8*]* @iInt2kFlattenedFunctionNames, i32 0, i32 0), i8*** %7
  %8 = load i8**, i8*** %7
  call void @_iInt2k_handle_meta_data(i32 1, i32* %6, i8** %4, i8** %8)
  call void @_iInt2k_lineNumToLineInfo(i32 2, i8* getelementptr inbounds ([132 x i8], [132 x i8]* @0, i32 0, i32 0))
  call void @_iInt2k_lineNumToLineInfo(i32 4, i8* getelementptr inbounds ([184 x i8], [184 x i8]* @1, i32 0, i32 0))
  call void @_iInt2k_lineNumToLineInfo(i32 5, i8* getelementptr inbounds ([149 x i8], [149 x i8]* @2, i32 0, i32 0))
  call void @_iInt2k_lineNumToLineInfo(i32 0, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @3, i32 0, i32 0))
  call void @_iInt2k_lineNumToLineInfo(i32 4, i8* getelementptr inbounds ([206 x i8], [206 x i8]* @4, i32 0, i32 0))
  call void @_iInt2k_lineNumToLineInfo(i32 0, i8* getelementptr inbounds ([186 x i8], [186 x i8]* @5, i32 0, i32 0))
  call void @_iInt2k_lineNumToLineInfo(i32 0, i8* getelementptr inbounds ([133 x i8], [133 x i8]* @6, i32 0, i32 0))
  call void @_iInt2k_lineNumToLineInfo(i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @7, i32 0, i32 0))
  ret void
}

define void @markFunctionID() {
  %1 = alloca i64
  store i64 0, i64* %1
  %2 = load i64, i64* %1
  %3 = alloca i8**
  store i8** getelementptr inbounds ([22 x i8*], [22 x i8*]* @int2kBestArray, i32 0, i32 0), i8*** %3
  %4 = load i8**, i8*** %3
  call void @_int2k_handle_function_name(i32 22, i8** %4)
  %5 = alloca i32*
  store i32* getelementptr inbounds ([4 x i32], [4 x i32]* @int2kBlockIndexFunction, i32 0, i32 0), i32** %5
  %6 = load i32*, i32** %5
  %7 = alloca i8**
  store i8** getelementptr inbounds ([5 x i8*], [5 x i8*]* @int2kFlattenedFunctionNames, i32 0, i32 0), i8*** %7
  %8 = load i8**, i8*** %7
  call void @_int2k_handle_meta_data(i32 1, i32* %6, i8** %4, i8** %8)
  ret void
}

attributes #0 = { norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3, !4, !5, !6}
!llvm.ident = !{!7}

!0 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus, file: !1, producer: "clang version 7.0.0 (tags/RELEASE_700/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2)
!1 = !DIFile(filename: "hello.cpp", directory: "/data")
!2 = !{}
!3 = !{i32 2, !"Dwarf Version", i32 4}
!4 = !{i32 2, !"Debug Info Version", i32 3}
!5 = !{i32 1, !"wchar_size", i32 4}
!6 = !{i32 7, !"PIC Level", i32 1}
!7 = !{!"clang version 7.0.0 (tags/RELEASE_700/final)"}
!8 = distinct !DISubprogram(name: "main", scope: !1, file: !1, line: 2, type: !9, isLocal: false, isDefinition: true, scopeLine: 3, flags: DIFlagPrototyped, isOptimized: true, unit: !0, retainedNodes: !15)
!9 = !DISubroutineType(types: !10)
!10 = !{!11, !11, !12}
!11 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64)
!14 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!15 = !{!16, !17}
!16 = !DILocalVariable(name: "argc", arg: 1, scope: !8, file: !1, line: 2, type: !11)
!17 = !DILocalVariable(name: "argv", arg: 2, scope: !8, file: !1, line: 2, type: !12)
!18 = !DILocation(line: 2, column: 14, scope: !8)
!19 = !DILocation(line: 2, column: 27, scope: !8)
!20 = !DILocation(line: 4, column: 3, scope: !8)
!21 = !DILocation(line: 5, column: 3, scope: !8)
